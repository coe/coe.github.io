function receivePush(e){alert("Received push: "+JSON.stringify(e))}function trayClickFocusedApp(e){Ti.API.info("TrayClickFocusedApp: "+e.payload)}function trayClickLaunchedApp(e){Ti.API.info("TrayClickLaunchedApp: "+e.payload)}function enablePushNotifications(){Utils.pushNotificationsEnabled=!0,Ti.App.Properties.setBool("PushNotifications-Enabled",!0),checkPushNotifications(),onPushEnabled&&onPushEnabled()}function disablePushNotifications(){Utils.pushNotificationsEnabled=!1,Ti.App.Properties.setBool("PushNotifications-Enabled",!1),checkPushNotifications(),onPushDisabled&&onPushDisabled()}function setOnPushEnabled(e){onPushEnabled=e}function setOnPushDisabled(e){onPushDisabled=e}function getAndroidPushModule(){try{return require("ti.cloudpush")}catch(e){return alert("Unable to require the ti.cloudpush module for Android!"),Utils.pushNotificationsEnabled=!1,Ti.App.Properties.setBool("PushNotifications-Enabled",!1),onPushDisabled&&onPushDisabled(),null}}function checkPushNotifications(){function e(i){Ti.App.iOS.removeEventListener("usernotificationsettings",e),Ti.Network.registerForPushNotifications(t)}if(null===Utils.pushNotificationsEnabled&&(Utils.pushNotificationsEnabled=Ti.App.Properties.getBool("PushNotifications-Enabled",!1)),"iPhone OS"===Ti.Platform.name)if(Utils.pushNotificationsEnabled){if("Simulator"==Titanium.Platform.model)return alert("The simulator does not support push!"),void disablePushNotifications();var t={success:deviceTokenSuccess,error:deviceTokenError,callback:receivePush};Utils.IOS8?(Ti.App.iOS.addEventListener("usernotificationsettings",e),Ti.App.iOS.registerUserNotificationSettings({types:[Ti.App.iOS.USER_NOTIFICATION_TYPE_ALERT,Ti.App.iOS.USER_NOTIFICATION_TYPE_SOUND,Ti.App.iOS.USER_NOTIFICATION_TYPE_BADGE]})):(t.types=[Ti.Network.NOTIFICATION_TYPE_BADGE,Ti.Network.NOTIFICATION_TYPE_ALERT,Ti.Network.NOTIFICATION_TYPE_SOUND],Ti.Network.registerForPushNotifications(t))}else Ti.Network.unregisterForPushNotifications(),Utils.pushDeviceToken=null;else if("android"===Ti.Platform.name){if(null===androidPushModule&&(androidPushModule=getAndroidPushModule(),null===androidPushModule))return;var i=androidPushModule.isGooglePlayServicesAvailable();i!=androidPushModule.SUCCESS&&alert("Google Play Services is not installed/updated/available"),Utils.pushNotificationsEnabled&&i==androidPushModule.SUCCESS?androidPushModule.retrieveDeviceToken({success:deviceTokenSuccess,error:deviceTokenError}):(androidPushModule.enabled=!1,androidPushModule.removeEventListener("callback",receivePush),androidPushModule.removeEventListener("trayClickFocusedApp",trayClickFocusedApp),androidPushModule.removeEventListener("trayClickLaunchedApp",trayClickLaunchedApp),Utils.pushDeviceToken=null)}}function deviceTokenSuccess(e){Utils.pushDeviceToken=e.deviceToken,Utils.pushToken=Utils.pushDeviceToken,alert("Device token is retrieved: "+Utils.pushDeviceToken),Ti.API.info("Device Token: "+Utils.pushDeviceToken),androidPushModule&&(androidPushModule.enabled=!0,androidPushModule.addEventListener("callback",receivePush),androidPushModule.addEventListener("trayClickFocusedApp",trayClickFocusedApp),androidPushModule.addEventListener("trayClickLaunchedApp",trayClickLaunchedApp))}function deviceTokenError(e){alert("Failed to register for push! "+e.error),disablePushNotifications()}var androidPushModule=null,onPushEnabled=null,onPushDisabled=null;exports.disablePushNotifications=disablePushNotifications,exports.enablePushNotifications=enablePushNotifications,exports.setOnPushEnabled=setOnPushEnabled,exports.setOnPushDisabled=setOnPushDisabled,exports.checkPushNotifications=checkPushNotifications,exports.getAndroidPushModule=getAndroidPushModule;